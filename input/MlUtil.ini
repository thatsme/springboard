# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifier]
bootstrap = True
ccp_alpha = 0.0
class_weight = balanced
criterion = gini
max_depth = 4
max_features = auto
max_leaf_nodes = None
max_samples = None
min_impurity_decrease = 0.0
min_impurity_split = 2
min_samples_leaf = 1
min_samples_split = 2
min_weight_fraction_leaf = 0.0
n_estimators = 100
n_jobs = -1
oob_score = False
random_state = 42
verbose = 0
warm_start = False

# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifierGS_1]
n_estimators = [5,10,50,100,250]
max_depth = [2,4,8,16,32,None]

# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifierGS_2]
n_estimators = [10,50,100,250,500]
max_depth = [4,8,16,32,48,None]

# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifierGS_3]
n_estimators = [50,100,250,500, 1000]
max_depth = [8,16,32,48, 96,None]

# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifierGS_4]
n_estimators = [100, 300, 500, 800, 1200]
min_samples_split = [2, 5, 10, 15, 100]
min_samples_leaf = [1, 2, 5, 10] 

# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifierGS_5]
criterion = [gini,entropy]
max_features = [sqrt, log2]

# bool, int, str, float, list, doct, none --> binary mask
# first 7 digit of key name
[RandomForestClassifierRS_1]
n_estimators = [200,400,600,800,1000,1200,1400,1600,1800,2000]
max_features = [auto,sqrt]
max_depth = [10,20,30,40,50,60,70,80,90,100,110,None]
min_samples_split = [2,5,10,15]
min_samples_leaf = [1,2,4,6]
max_leaf_nodes = [50,100,200]
bootstrap = [True,False]